****************************************************
スクリプトによって操作する
****************************************************

grisではMaya本体同様、スクリプトによって制御するための機構を備えています。

この章ではコマンドによる制御を行う方法を、
プロジェクトディレクトリの制作から順を追って紹介します。

別の章で説明されている制御コードのリンクもついています。


.. contents:: 目次
    :local:
    :depth: 2

プロジェクトを設定する
=================================
grisで作業する場合、最初にアセットごとにプロジェクトディレクトリをする必要があります。
プロジェクトディレクトリの作成には以下のドキュメントを参照して下さい。

* :ref:`FS-createProjDir`

上記リンクのコマンドを実行するとプロジェクトの新規作成が行われ、
FactorySettingsは作成されたプロジェクトが適用されます。
すでにプロジェクトが存在する場合は、
その内容がFactorySettingsのカレント状態として適用されます。


ルートノードを作成する
=================================
プロジェクトを設定したらルートノードを作成します。
ルートノードを作成するには、
プロジェクトが設定されたディレクトリがすでに存在する必要があります。

プロジェクト設定済みのディレクトリが存在する場合、
以下のコマンドを実行するとアセットのルートを作成する事ができます。

.. code-block:: python
    :linenos:

    from gris3 import core
    core.createRoot('任意のディレクトリパス')

coreモジュールは現在のFactorySettingsに応じて、
リグ制作のトリガーとなるコマンドを実行する機能を提供します。

**createRoot**
は設定されているFactorySettingsで指定されているConstructorのルート作成コマンドを呼び出します。

デフォルトのStandardConstructorでは戻り値として
**grisNode.GrisRoot**
オブジェクトが返されます。




ユニットとベースジョイントを作成する
=================================================
JointCreatorのprocessメソッドを実行することにより、
ユニットとベースジョイントを作成することができます。
詳細は以下をご覧下さい。

* :ref:`MRU-jcProcess`


プリセットからジョイントを作成
=================================================
ルートを作成すると、リグユニット作成やユニットを使用したジョイントの作成が
行えるようになります。

今回は簡単に作成できるプリセットを使用してみます。
プリセットを使用するにはcoreモジュールのexecPreset関数を使用します。

.. code-block:: python
    :linenos:

    from gris3 import core
    core.execPreset('basicHumanPreset')

これで人型のプリセットを使用して人体のジョイントが作成されました。




ビルドする
========================

* :ref:`FS-executeBuildScript`